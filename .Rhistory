library(devtools)
browseVignettes(Solvequadratic)
browseVignettes(package="Solvequadratic")
library(Solvequadratic)
browseVignettes(package="Solvequadratic")
library(Solvequadratic)
browseVignettes(package="Solvequadratic")
devtools::build()
browseVignettes(package="Solvequadratic")
browseVignettes(package="Solvequadratic")
library(Solvequadratic)
browseVignettes(package="Solvequadratic")
browseVignettes(package="Solvequadratic")
build_vignettes(pkg="Solvequadratic")
use_vignette("demo")
devtools::build_vignettes(pkg="Solvequadratic")
devtools::build_vignettes()
library(Solvequadratic)
browseVignettes()
browseVignettes("Solvequadratic")
?browseVignettes
browseVignettes(head)
browseVignettes("head")
browseVignettes("dplyr")
vignette(Solvequadratic)
vignette("Solvequadratic")
vignette("rootSolve")
devtools
use_vignette("Solvequadratic")
?build()
?use_vignette
load_all()
vignette(Solvequadratic)
vignette("Solvequadratic")
devtools::build_vignettes()
devtools::build_vignettes(package="Solvequadratic")
devtools::build_vignettes()
library(Solvequadratic)
devtools::build_vignettes()
build_vignettes()
devtools::build_vignettes()
library(devtools)
devtools::build_vignettes()
?build_vignettes
build_vignettes("Solvequadratic")
library(Solvequadratic)
library(Solvequadratic)
build_vignettes()\
build_vignettes()
?usethis
devtools::build(vignettes = TRUE)
use_vignette("Solvequadratic")
build_vignettes()
build_vignettes()
use_vignette("Solvequadratic")
library(Solvequadratic)
library(Solvequadratic)
quadratic_solver()
quadratic_solver(1,200,3)
library(Solvequadratic)
install.packages("broman")
library(broman)
vec2string(letters[1:2])
letters
letters[1:2]
vec2string(abc[1:2])
vec2string(c(1,2,3)[1:2])
vec2string(c(1,2,3))
vec2string(c("a", "b"))
example(myround)
example(venn)
example("pick_more_precise")
use_travis()
devtools::use_test()
detach("package:devtools", unload=TRUE)
devtools::use_test()
?use_test
library(devtools)
?usethis
use_test()
use_testthat()
use_testthat("quadratic_solver")
use_test("quadratic_solver")
?test_that
expect_equal(10, 10 + 1e-7)
?testthat
library(testthat)
expect_equal(10, 10 + 1e-7)
expect_output(quadratic_solver(1,2,3),"hey")
expect_message(quadratic_solver(1,2,3))
expect_true(quadratic_solver(1,2,3))
expect_output(quadratic_solver(1,2,3),"There are no real roots.")
expect_equal(quadratic_solver(1,2,3),"There are no real roots.")
test_that("hello")
quadratic_solver
quadratic_solver()
quadratic_solver(1,2,3)
quadratic_solver(1,200,3)
expect_equal(quadratic_solver(1,200,3), -0.01500113 -199.98499887)
list(-0.01500113 - 199.98499887)
typeof(quadratic_solver(1,200,3))
quadratic_solver(1,200,3)[1]
quadratic_solver(1,200,3)[2]
class(quadratic_solver(1,200,3))
dim()
dim(quadratic_solver(1,200,3))
quadratic_solver(1,2,1)
library(Solvequadratic)
?Solvequadratic
library(Solvequadratic)
library(Solvequadratic)
?Solvequadratic
devtools::use_travis()
library(devtools)
install.packages(devtools)
install.packages("devtools")
use_travis()
install.packages("usethis")
library(usethis)
use_travis()
use_github()
use_travis()
use_travis()
